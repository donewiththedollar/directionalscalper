{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Directional Scalper","text":"<p>Welcome to the documentation for Directional Scalper.</p>"},{"location":"#links","title":"Links","text":"<ul> <li>Website</li> <li>API (BYBIT)</li> <li>Discord</li> </ul> Directional Scalper API Scraper Dashboard Directional Scalper Multi Menu GUI"},{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#account-section","title":"Account Section","text":"<p>Configure your account settings in the <code>config.json</code> file under the <code>account</code> section. This includes API keys, account names, and other related settings.</p>"},{"location":"configuration/#parameters","title":"Parameters:","text":"<ul> <li>api_key: Your exchange API key.</li> <li>api_secret: Your exchange API secret.</li> <li>account_name: A name to identify your account configuration.</li> </ul>"},{"location":"configuration/#bot-section","title":"Bot Section","text":"<p>Configure your bot settings in the <code>config.json</code> file under the <code>bot</code> section. This includes strategy parameters, risk management settings, and other related settings.</p>"},{"location":"configuration/#risk-management","title":"Risk management","text":"<ul> <li>user_defined_leverage_long: This parameter defines the leverage to use for long positions. Leverage is a multiplier that increases the size of the position and the potential profit/loss. For example, a leverage of 10 means that for every $1 you have, you can place a trade worth $10. Be careful with this setting as higher leverage also increases the risk.</li> <li>user_defined_leverage_short: This parameter defines the leverage to use for short positions. Similar to <code>user_defined_leverage_long</code>, it's a multiplier that increases the size of the position and the potential profit/loss.</li> </ul>"},{"location":"configuration/#linear-grid-strategy-parameters","title":"Linear Grid Strategy Parameters","text":"<p>Here are the parameters for the <code>linear_grid</code> strategy in your <code>config.json</code> file:</p> <ul> <li>max_qty_percent_long: Defines the maximum percentage of your wallet balance that can be used for long positions.</li> <li>max_qty_percent_short: Defines the maximum percentage of your wallet balance that can be used for short positions.</li> <li>auto_reduce_cooldown_enabled: Boolean parameter that determines whether the auto-reduce cooldown feature is enabled. This feature automatically reduces the size of your positions after a certain period.</li> <li>auto_reduce_cooldown_start_pct: Defines the percentage at which the auto-reduce cooldown feature starts.</li> <li>wallet_exposure_limit_long: Defines the maximum exposure limit for long positions as a percentage of your wallet balance.</li> <li>wallet_exposure_limit_short: Defines the maximum exposure limit for short positions as a percentage of your wallet balance.</li> <li>levels: Defines the number of grid levels, representing the total number of buy and sell orders placed above and below the current price level.</li> <li>strength: Defines the strength of the grid. A higher value means the grid levels are spaced further apart.</li> <li>outer_price_distance: Defines the distance from the current price to the outermost grid levels.</li> <li>min_outer_price_distance: Defines the minimum distance from the current price to the outermost grid levels.</li> <li>max_outer_price_distance: Defines the maximum distance from the current price to the outermost grid levels.</li> <li>long_mode: Boolean parameter that determines whether the bot can open long positions.</li> <li>short_mode: Boolean parameter that determines whether the bot can open short positions.</li> <li>reissue_threshold: Defines the threshold at which the bot will reissue orders that have been partially filled.</li> <li>buffer_percentage: Defines the buffer percentage for the grid. This is the percentage of the price range kept empty between the outermost grid levels and the upper and lower price limits.</li> <li>initial_entry_buffer_pct: Defines the buffer percentage for the initial entry.</li> <li>min_buffer_percentage: Defines the minimum buffer percentage for the grid.</li> <li>max_buffer_percentage: Defines the maximum buffer percentage for the grid.</li> <li>enforce_full_grid: Boolean parameter that determines whether the bot should always maintain a full grid of orders.</li> <li>min_buffer_percentage_ar: Defines the minimum buffer percentage for auto-reduce.</li> <li>max_buffer_percentage_ar: Defines the maximum buffer percentage for auto-reduce.</li> <li>upnl_auto_reduce_threshold_long: Defines the unrealized profit and loss (UPNL) threshold for auto-reducing long positions.</li> <li>upnl_auto_reduce_threshold_short: Defines the UPNL threshold for auto-reducing short positions.</li> <li>failsafe_enabled: Boolean parameter that determines whether the failsafe feature is enabled. This feature automatically closes all positions if the UPNL reaches a certain threshold.</li> <li>failsafe_start_pct: Defines the percentage at which the failsafe feature starts.</li> <li>long_failsafe_upnl_pct: Defines the UPNL percentage for the long failsafe.</li> <li>short_failsafe_upnl_pct: Defines the UPNL percentage for the short failsafe.</li> </ul>"},{"location":"configuration/#example-configuration-snippet","title":"Example Configuration Snippet","text":"<pre><code>{\n  \"account\": {\n    \"api_key\": \"your_api_key\",\n    \"api_secret\": \"your_api_secret\",\n    \"account_name\": \"account_1\"\n  },\n  \"bot\": {\n    \"linear_grid\": {\n      \"max_qty_percent_long\": 50,\n      \"max_qty_percent_short\": 50,\n      \"auto_reduce_cooldown_enabled\": true,\n      \"auto_reduce_cooldown_start_pct\": 10,\n      \"wallet_exposure_limit_long\": 30,\n      \"wallet_exposure_limit_short\": 30,\n      \"levels\": 10,\n      \"strength\": 2,\n      \"outer_price_distance\": 5,\n      \"min_outer_price_distance\": 2,\n      \"max_outer_price_distance\": 10,\n      \"long_mode\": true,\n      \"short_mode\": true,\n      \"reissue_threshold\": 5,\n      \"buffer_percentage\": 1,\n      \"initial_entry_buffer_pct\": 0.5,\n      \"min_buffer_percentage\": 0.2,\n      \"max_buffer_percentage\": 2,\n      \"enforce_full_grid\": true,\n      \"min_buffer_percentage_ar\": 0.2,\n      \"max_buffer_percentage_ar\": 2,\n      \"upnl_auto_reduce_threshold_long\": 10,\n      \"upnl_auto_reduce_threshold_short\": 10,\n      \"failsafe_enabled\": true,\n      \"failsafe_start_pct\": 50,\n      \"long_failsafe_upnl_pct\": -20,\n      \"short_failsafe_upnl_pct\": -20\n    }\n  }\n}\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following prerequisites:</p> <ul> <li>Python 3.11+</li> <li>pip</li> </ul>"},{"location":"installation/#quickstart","title":"Quickstart","text":"<ol> <li> <p>Clone the repository:    <code>git clone https://github.com/donewiththedollar/directionalscalper.git</code></p> <p>Change current working directory to the project directory: <code>cd directionalscalper</code></p> </li> <li> <p>Install the required dependencies:    <code>pip3.11 install -r requirements.txt</code></p> </li> <li> <p>Add your API key(s) to the <code>config.json</code> file located in the <code>/configs</code> folder.</p> </li> <li> <p>Run the bot:</p> </li> <li>To display the menu and select a strategy, use the following command:      <code>python3.11 multi_bot_signalscreener.py --config config.json</code>      or      <code>python3.11 multi_bot.py --config config.json</code></li> <li>Alternatively, you can run the bot with command line parameters:<ul> <li>For the multi-bot auto symbol rotator strategy:    <code>python3.11 multi_bot_signalscreener_multicore.py --exchange bybit --account_name account_1 --strategy qsgridob --config config.json</code></li> <li>For the old single coin strategy:    <code>python3.11 bot.py --exchange bybit --symbol DOGEUSDT --strategy qstrendob --config config.json</code></li> </ul> </li> </ol>"},{"location":"installation/#installing-python-311","title":"Installing Python 3.11","text":"<p>To install Python 3.11 on your system, follow these steps:</p> <ol> <li> <p>Update the package list and install the necessary dependencies:    <code>sudo apt update    sudo apt install -y build-essential gdb lcov pkg-config \\    libbz2-dev libffi-dev libgdbm-dev libgdbm-compat-dev liblzma-dev \\    libncurses5-dev libreadline-dev libsqlite3-dev libssl-dev \\    lzma lzma-dev tk-dev uuid-dev zlib1g-dev</code></p> </li> <li> <p>Download the Python 3.11.0 source code:    <code>cd /opt    wget https://www.python.org/ftp/python/3.11.0/Python-3.11.0.tgz</code></p> </li> <li> <p>Extract the downloaded archive:    <code>sudo tar -xzf Python-3.11.0.tgz</code></p> </li> <li> <p>Change to the extracted directory:    <code>cd Python-3.11.0</code></p> </li> <li> <p>Configure the build with optimizations:    <code>sudo ./configure --enable-optimizations --prefix=/usr/local</code></p> </li> <li> <p>Compile Python:    <code>sudo make -j 8</code></p> </li> <li> <p>Install Python 3.11:    <code>sudo make altinstall</code></p> </li> <li> <p>Verify the installation:    <code>python3.11 --version</code></p> </li> </ol> <p>You should see the installed Python version displayed.</p> <p>That's it! You have now installed Python 3.11 on your system.</p>"}]}